{"version":3,"sources":["lora/MacCommands.ts","components/help/HelpTooltip.tsx","components/input/helpers.tsx","components/input/NumberInput.tsx","components/input/UserConfig.ts","components/input/UserInput.tsx","lora/Airtime.ts","components/result/Result.tsx","components/result/Results.tsx","components/scroll/HorizontalScroll.tsx","components/calculator/Router.ts","components/calculator/Calculator.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["UplinkMacCommands102","name","size","DownlinkMacCommands102","HelpTooltip","text","placement","children","useState","uniqueId","id","OverlayTrigger","overlay","Tooltip","className","withFormControl","state","value","onChange","event","target","currentTarget","setValue","NumberInput","min","useEffect","InputGroup","Prepend","Button","onClick","variant","aria-label","FormControl","type","placeholder","Append","v","defaults","payloadSize","headerSize","codingRate","UserInput","props","useParam","defaultValue","params","result","values","split","map","trim","test","console","warn","substr","join","lowerCase","toLowerCase","mac","concat","find","cmd","macCommands","decodeUserConfig","userConfig","addMacCommand","setPacketSize","setCodingRate","setUserConfig","parts","push","replace","encodeUserConfig","macCommandButtons","idx","key","Badge","pill","includes","Form","Row","Group","as","Col","controlId","Label","Control","md","ButtonToolbar","Airtime","sf","bw","lowDrOptimize","explicitHeader","preambleLength","tSym","Math","pow","tPreamble","h","de","cr","payloadSymbNb","max","ceil","tPayload","fmt","n","digits","toLocaleString","minimumFractionDigits","maximumFractionDigits","Result","dr","airtime","maxDwellTime","dcDelay","fapMessages","fapDelay","tooLong","notes","floor","Results","region","packetSize","results","dataRates","calculate","oddEven","highlight","length","HorizontalScroll","scrollContainer","useRef","hasOverflowLeft","setHasOverflowLeft","hasOverflowRight","setHasOverflowRight","width","height","resize","scrollX","x","scroll","current","scrollBy","handleScroll","scrollLeft","scrollWidth","offsetWidth","log","window","addEventListener","removeEventListener","ref","parseUrl","history","location","config","pathname","networkName","regionName","parameters","network","networks","regions","undefined","setUrl","url","Calculator","changeUrl","bind","r","defaultRegion","ButtonGroup","active","disabled","setRegion","label","title","limitations","source","countries","App","configUrl","process","progress","setProgress","setConfig","didCancel","a","axios","get","data","fetchConfig","basename","Container","fluid","render","href","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bed6892.chunk.js","sourcesContent":["export type MacCommand = {\n  name: string;\n  /**\n   * The command's payload size, excluding the byte for the MAC command itself.\n   */\n  size: number;\n};\n\n/**\n * The LoRaWAN 1.0.2 MAC commands and their payload sizes, if any (excluding\n * the one byte for the MAC command itself). Some commands can be present in\n * the very same LoRaWAN packet multiple times.\n */\nexport const UplinkMacCommands102: MacCommand[] = [\n  {name: 'LinkCheckReq', size: 0},\n  {name: 'LinkAdrAns', size: 1},\n  {name: 'DutyCycleAns', size: 0},\n  {name: 'RXParamSetupAns', size: 1},\n  {name: 'DevStatusAns', size: 2},\n  {name: 'NewChannelAns', size: 1},\n  {name: 'DlChannelAns', size: 1},\n  {name: 'RXTimingSetupAns', size: 0},\n  {name: 'TxParamSetupAns', size: 0},\n];\n\nexport const DownlinkMacCommands102: MacCommand[] = [\n  {name: 'LinkCheckAns', size: 2},\n  {name: 'LinkAdrReq', size: 4},\n  {name: 'DutyCycleReq', size: 1},\n  {name: 'RXParamSetupReq', size: 4},\n  {name: 'DevStatusReq', size: 0},\n  {name: 'NewChannelReq', size: 5},\n  {name: 'DlChannelReq', size: 4},\n  {name: 'RXTimingSetupReq', size: 1},\n  {name: 'TxParamSetupReq', size: 1},\n];\n","import React, {PropsWithChildren, useState} from 'react';\nimport {Placement} from 'react-bootstrap/Overlay';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport {uniqueId} from 'lodash';\n\ntype HelpTooltipProps = {\n  text?: string;\n  placement?: Placement;\n};\n\n/**\n * Add an information icon for a tooltip to the given element, if the optional\n * help text is set.\n */\nexport default function HelpTooltip({\n  text,\n  placement = 'bottom',\n  children,\n}: PropsWithChildren<HelpTooltipProps>) {\n  const [id] = useState(() => uniqueId('HelpTooltip-'));\n\n  if (!text) {\n    return null;\n  }\n\n  return (\n    <OverlayTrigger placement={placement} overlay={<Tooltip id={id}>{text}</Tooltip>}>\n      <span>\n        {children}\n        <sup>\n          <small className=\"text-muted\">&#9432;</small>\n        </sup>\n      </span>\n    </OverlayTrigger>\n  );\n}\n","import React, {Dispatch, SetStateAction} from 'react';\n\n/**\n * Returns an object that can be spread for use in Bootstrap forms, like\n * `<FormControl {...withFormControl(state)}/>`.\n */\nexport function withFormControl<T>(state: {value: T; setValue: Dispatch<SetStateAction<T>>}) {\n  // See https://github.com/react-bootstrap/react-bootstrap/issues/2781\n  function onChange(event: React.FormEvent<any>) {\n    // function onChange(event: React.FormEventHandler) {\n    const target = event.currentTarget;\n    state.setValue(typeof state.value === 'number' ? (+target.value as any) : target.value);\n  }\n\n  // FormControl expects a string for value\n  return {value: '' + state.value, onChange};\n}\n","import React, {Dispatch, SetStateAction, useEffect} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport {withFormControl} from './helpers';\nimport './NumberInput.scss';\n\ntype NumberInputProps = {\n  min?: number;\n  value: number;\n  setValue: Dispatch<SetStateAction<number>>;\n};\n\n/**\n * A Bootstrap form input field with decrement and increment buttons.\n */\nexport default function NumberInput({min = 0, value, setValue}: NumberInputProps) {\n  function dec() {\n    if (value > min) {\n      setValue(value - 1);\n    }\n  }\n\n  function inc() {\n    setValue((v) => v + 1);\n  }\n\n  useEffect(() => {\n    setValue(value);\n  }, [value, setValue]);\n\n  return (\n    <InputGroup className=\"mb-3\">\n      <InputGroup.Prepend>\n        <Button onClick={dec} variant=\"outline-secondary\" aria-label=\"Decrease\">\n          -\n        </Button>\n      </InputGroup.Prepend>\n      <FormControl\n        {...withFormControl({value, setValue})}\n        type=\"number\"\n        className=\"NumberInput\"\n        min={min}\n        placeholder=\"Enter number\"\n      />\n      <InputGroup.Append>\n        <Button onClick={inc} variant=\"outline-secondary\" aria-label=\"Increase\">\n          +\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n}\n","import {CodingRate} from '../../lora/Airtime';\nimport {DownlinkMacCommands102, MacCommand, UplinkMacCommands102} from '../../lora/MacCommands';\n\ntype UserConfig = {\n  macCommands?: MacCommand[];\n} & typeof defaults;\n\nexport const defaults = {\n  payloadSize: 12,\n  headerSize: 13,\n  codingRate: '4/5' as CodingRate,\n};\n\n/**\n * Takes the first integer argument to be the application payload size, the\n * second as the LoRaWAN header size, a single string starting with \"cr\" as the\n * coding rate, and all other values as possible MAC commands.\n */\nexport function decodeUserConfig(params: string = ''): UserConfig {\n  const result: UserConfig = {} as any;\n  const values = params.split(',').map((v) => v.trim());\n  for (let value of values) {\n    if (value === '') {\n      continue;\n    }\n\n    if (/^\\d+$/.test(value)) {\n      // The first integer denotes the payload size, the second the header size\n      if (!result.payloadSize) {\n        result.payloadSize = +value;\n      } else if (!result.headerSize) {\n        result.headerSize = +value;\n      } else {\n        console.warn(\n          `Ignored numeric value ${value}; already parsed both payloadSize and headerSize`\n        );\n      }\n      continue;\n    }\n\n    if (/^cr4[5678]$/i.test(value)) {\n      if (!result.codingRate) {\n        result.codingRate = value.substr(2).split('').join('/') as CodingRate;\n      } else {\n        console.warn(`Ignored string value ${value}; already parsed codingRate`);\n      }\n      continue;\n    }\n\n    // Case-insensitive search in both the uplink and downlink MAC commands\n    const lowerCase = value.toLowerCase();\n    const mac = UplinkMacCommands102.concat(DownlinkMacCommands102).find(\n      (cmd) => cmd.name.toLowerCase() === lowerCase\n    );\n    if (mac) {\n      result.macCommands = (result.macCommands || []).concat(mac);\n    } else {\n      console.warn(`Ignored string value ${value}; no matching MAC command found`);\n    }\n  }\n\n  return {...defaults, ...result};\n}\n\n/**\n * Encodes the user inputs for use in an URL segment.\n */\nexport function encodeUserConfig(\n  payloadSize: number,\n  headerSize: number,\n  codingRate?: CodingRate,\n  macCommands?: MacCommand[]\n) {\n  const parts: (string | number)[] = [];\n  if (payloadSize !== defaults.payloadSize || headerSize !== defaults.headerSize) {\n    parts.push(payloadSize);\n  }\n  if (headerSize !== defaults.headerSize) {\n    parts.push(headerSize);\n  }\n  if (codingRate && codingRate !== defaults.codingRate) {\n    parts.push('cr' + codingRate.replace('/', ''));\n  }\n  if (macCommands) {\n    parts.push(...macCommands.map((cmd) => cmd.name));\n  }\n  return parts.join(',');\n}\n","import React, {useEffect, useState} from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport {CodingRate} from '../../lora/Airtime';\nimport {MacCommand, UplinkMacCommands102} from '../../lora/MacCommands';\nimport HelpTooltip from '../help/HelpTooltip';\nimport {withFormControl} from './helpers';\nimport NumberInput from './NumberInput';\nimport {decodeUserConfig, encodeUserConfig} from './UserConfig';\n\n/**\n * The components determines its parameters given its URL fragment, and only\n * tells the parent component about the total packet size and the coding rate.\n */\ntype UserConfigProps = {\n  userConfig?: string;\n  setPacketSize: (size: number) => void;\n  setCodingRate: (cr: CodingRate) => void;\n  setUserConfig: (fragment: string) => void;\n};\n\n/**\n * Form using some controlled components to input the packet's details.\n *\n * TODO The state is maintained by the parent component.\n *\n * This reports the total LoRa packet size, the coding rate and its own\n * fragment in the URL to its parent.\n *\n * /ttn/eu868/1.0.x,4/5,15,LinkCheckReq,LinkAdrAns,DutyCycleAns,RXParamSetupAns,DevStatusAns,NewChannelAns,RXTimingSetupAns,TxParamSetupAns,DlChannelAns\n *\n *\n */\nexport default function UserInput(props: UserConfigProps) {\n  function useParam<T>(defaultValue: T) {\n    const [value, setValue] = useState(defaultValue);\n    return {value, setValue};\n  }\n\n  const params = decodeUserConfig(props.userConfig);\n  const payloadSize = useParam(params.payloadSize);\n  const headerSize = useParam(params.headerSize);\n  const codingRate = useParam(params.codingRate);\n  const macCommands = useParam(params.macCommands);\n\n  function increaseHeaderSize(size: number) {\n    headerSize.setValue((v) => v + size);\n    // Same result:\n    // headerSize.setValue(headerSize.value + size);\n  }\n\n  function addMacCommand(cmd: MacCommand) {\n    macCommands.setValue((macCommands.value || []).concat(cmd));\n    increaseHeaderSize(cmd.size + 1);\n  }\n\n  useEffect(() => {\n    props.setPacketSize(headerSize.value + payloadSize.value);\n  }, [props, headerSize.value, payloadSize.value]);\n\n  useEffect(() => {\n    props.setCodingRate(codingRate.value);\n  }, [props, codingRate.value]);\n\n  /**\n   * Tells the parent that the user's configuration has changed, to keep the\n   * URL synchronized with the current inputs.\n   *\n   * Rather than this callback, we could use a Route in the parent component\n   * and manage our own URL segment here. However, by design, when the user\n   * configuration only uses default values then that segment would not exist.\n   * And as the routing does not provide an API to only change a specific URL\n   * segment, this component would need to know about the URL segments of its\n   * parent to reliably change its own segment. (Like to detect excessive\n   * slashes and avoid endless loops.) Instead, the URL segment is passed to\n   * this component, and this component notifies the parent about changes. The\n   * parent needs to know about this segment anyhow, like when the parent\n   * component changes the region for which the user configuration should be\n   * preserved.\n   */\n  useEffect(() => {\n    props.setUserConfig(\n      encodeUserConfig(payloadSize.value, headerSize.value, codingRate.value, macCommands.value)\n    );\n  }, [props, headerSize.value, payloadSize.value, codingRate.value, macCommands.value]);\n\n  const macCommandButtons = UplinkMacCommands102.map((cmd, idx) => (\n    <div key={idx}>\n      <Badge\n        onClick={() => addMacCommand(cmd)}\n        pill\n        variant={params.macCommands && params.macCommands.includes(cmd) ? 'primary' : 'secondary'}\n      >\n        {cmd.name} {cmd.size}\n      </Badge>\n      &nbsp;\n    </div>\n  ));\n\n  return (\n    <>\n      <Form>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formHeaderSize\">\n            <HelpTooltip\n              text=\"For a LoRaWAN 1.0.x uplink and downlink, the header is at least 13 bytes: Type (1), DevAddr (4), FCtrl (1), FCnt (2), FPort (1) and MIC (4).\"\n              placement=\"top\"\n              children={<Form.Label>Header size</Form.Label>}\n            />\n            <NumberInput {...headerSize} min={13} />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formApplicationPayloadSize\">\n            <HelpTooltip\n              text=\"The application payload size. Might be empty for a simple ACK or if the packet only includes MAC commands.\"\n              placement=\"top\"\n              children={<Form.Label>Payload size</Form.Label>}\n            />\n            <NumberInput {...payloadSize} />\n          </Form.Group>\n\n          <Form.Group as={Col} controlId=\"formCodingRate\">\n            <HelpTooltip\n              text=\"The coding rate (CR) used for forward error correction (FEC).\"\n              placement=\"top\"\n              children={<Form.Label>Coding rate</Form.Label>}\n            />\n            <Form.Control\n              as=\"select\"\n              {...withFormControl(codingRate)}\n              className=\"xxtext-primary xxborder-primary\"\n            >\n              <option value=\"4/5\">4/5</option>\n              <option value=\"4/6\">4/6</option>\n              <option value=\"4/7\">4/7</option>\n              <option value=\"4/8\">4/8</option>\n            </Form.Control>\n          </Form.Group>\n        </Form.Row>\n\n        {/* TODO Work in progress: somehow allow for adding/removing MAC commands; for now only when already in URL. */}\n        {params.macCommands && (\n          <>\n            <Form.Row className=\"justify-content-md-center\">\n              <Col md=\"8\">\n                <Form.Label>MAC command</Form.Label>\n                <ButtonToolbar aria-label=\"MAC commands\">{macCommandButtons}</ButtonToolbar>\n              </Col>\n            </Form.Row>\n            <br />\n          </>\n        )}\n      </Form>\n    </>\n  );\n}\n","export type CodingRate = '4/5' | '4/6' | '4/7' | '4/8';\n\nexport default class Airtime {\n  /**\n   * Calculates the LoRa airtime in milliseconds.\n   *\n   * See https://lora-developers.semtech.com/library/product-documents/ for the\n   * equations in AN1200.13 \"LoRa Modem Designer’s Guide\".\n   *\n   * Spreading factor and bandwidth together define the so called data rate.\n   *\n   * @param size full packet size. For LoRaWAN this includes the LoRaWAN MAC\n   *   header (about 9 bytes when no MAC commands are included), the application\n   *   payload, and the MIC (4 bytes).\n   * @param sf spreading factor, 6..12 (6 is not used in LoRaWAN)\n   * @param bw bandwidth in kHz, typically 125, sometimes 250 or 500\n   * @param codingRate coding rate, '4/5', '4/6', '4/7' or '4/8'\n   * @param lowDrOptimize low data rate optimization, 'auto', true or false.\n   *   This is usually enabled for low data rates, to avoid issues with drift\n   *   of the crystal reference oscillator due to either temperature change or\n   *   motion. When enabled, specifically for 125 kHz bandwidth and SF11 and\n   *   SF12, this adds a small overhead to increase robustness to reference\n   *   frequency variations over the timescale of the packet.\n   * @param explicitHeader if the LoRa header is present, true or false. This\n   *   is the low-level header that defines, e.g., coding rate, payload length\n   *   and the presence of a CRC checksum. In plain LoRa it can be left out if\n   *   each transmission uses the very same parameters and the receiver is\n   *   aware of those. For LoRaWAN, where at least the payload length is not\n   *   fixed, the low-level LoRa header is always enabled.\n   * @param preambleLength number of preamble symbols. For LoRaWAN this is 8.\n   */\n  static calculate(\n    size: number,\n    sf: number,\n    bw: any = 125,\n    codingRate: CodingRate = '4/5',\n    lowDrOptimize: 'auto' | true | false = 'auto',\n    explicitHeader: boolean = true,\n    preambleLength = 8\n  ) {\n    // All times in milliseconds\n    const tSym = (Math.pow(2, sf) / (bw * 1000)) * 1000;\n    const tPreamble = (preambleLength + 4.25) * tSym;\n\n    // H = 0 when the header is enabled, H = 1 when no header is present.\n    const h = explicitHeader ? 0 : 1;\n    // DE = 1 when the low data rate optimization is enabled, DE = 0 for\n    // disabled. When 'auto' then only for SF11 and SF12, on 125kHz. Allow for\n    // programming errors that pass string values from, e.g., some form input.\n    const de =\n      (lowDrOptimize === 'auto' && +bw === 125 && +sf >= 11) || lowDrOptimize === true ? 1 : 0;\n    // CR is the coding rate from 1 to 4\n    const cr = +codingRate[2] - 4;\n    const payloadSymbNb =\n      8 +\n      Math.max(\n        Math.ceil((8 * size - 4 * sf + 28 + 16 - 20 * h) / (4 * (sf - 2 * de))) * (cr + 4),\n        0\n      );\n    const tPayload = payloadSymbNb * tSym;\n\n    return tPreamble + tPayload;\n  }\n}\n","import React from 'react';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport {DataRate} from '../../AppConfig';\n\ntype ResultGridProps = {\n  dr: DataRate;\n  airtime: number;\n  maxDwellTime?: number;\n};\n\nfunction fmt(n: number, digits: number) {\n  return n.toLocaleString('en-US', {minimumFractionDigits: digits, maximumFractionDigits: digits});\n}\n\n/**\n * A single result, showing the data rate (SF, bandwidth), time on air and\n * calculated limits.\n */\nexport function Result({dr, airtime, maxDwellTime = 0}: ResultGridProps) {\n  // Minimum delay in seconds between two packet starts, for maximum 1% duty cycle\n  const dcDelay = airtime / 0.01 / 1000;\n\n  // Maximum messages/day for 30 seconds TTN Fair Access Policy\n  const fapMessages = 30000 / airtime;\n  const fapDelay = (24 * 3600) / fapMessages;\n\n  const tooLong = maxDwellTime > 0 && airtime > maxDwellTime;\n\n  return (\n    <>\n      <OverlayTrigger\n        placement={`top`}\n        overlay={\n          dr.notes ? <Tooltip id={`Result-datarate-${dr.name}-help`}>{dr.notes}</Tooltip> : <span />\n        }\n      >\n        <div className={`Result-datarate ${dr.notes ? 'Result-has-note' : ''}`}>\n          <div className=\"Result-dr\">{dr.name}</div>\n          <div>\n            <span className=\"Result-sf\">SF{dr.sf}</span>\n            <span className=\"Result-unit Result-unit-bw\">\n              BW\n              <br />\n              {dr.bw}\n            </span>\n          </div>\n        </div>\n      </OverlayTrigger>\n\n      <OverlayTrigger\n        placement={`top`}\n        overlay={\n          <Tooltip id=\"Result-dutycycle-help\">\n            {fmt(airtime, 3)} milliseconds time on air\n            {tooLong && `. This exceeds the maximum dwell time of ${maxDwellTime} milliseconds.`}\n          </Tooltip>\n        }\n      >\n        <div className={`Result-airtime ${tooLong ? 'Result-has-warning' : ''}`}>\n          <span>\n            {fmt(airtime, 1)}\n            <span className=\"Result-unit\">ms</span>\n          </span>\n          {tooLong && <span className={'Result-dwelltime-warning'}>max dwell time exceeded</span>}\n        </div>\n      </OverlayTrigger>\n\n      <OverlayTrigger\n        placement={`top`}\n        overlay={\n          <Tooltip id=\"Result-dutycycle-help\">\n            If regional legal or LoRaWAN maximum duty cycles apply, then a 1% maximum duty cycle\n            needs a <em>minimum</em> of {fmt(dcDelay, 3)} seconds between <em>any</em> subsequent\n            packet starts in the same subband.\n          </Tooltip>\n        }\n      >\n        <div className=\"Result-dutycycle\">\n          <div>\n            {fmt(dcDelay, 1)}\n            <span className=\"Result-unit\">sec</span>\n          </div>\n          <div>\n            {fmt(Math.floor(3600 / dcDelay), 0)}\n            <span className=\"Result-unit\">\n              msg\n              <br />\n              /hour\n            </span>\n          </div>\n        </div>\n      </OverlayTrigger>\n\n      <OverlayTrigger\n        placement={`top`}\n        overlay={\n          <Tooltip id=\"Result-dutycycle-help\">\n            <p>\n              The TTN Fair Access Policy allows for at most 30 seconds time on air per device, per\n              24 hours. An airtime of {fmt(airtime, 3)}&nbsp;ms thus yields a maximum of{' '}\n              {fmt(fapMessages, 1)} messages.\n            </p>\n            <p>\n              When transmitting all day, this translates to, <em>on average</em>, a minimum of{' '}\n              {fmt(fapDelay, 1)} seconds between the starts of two uplinks, or a maximum of{' '}\n              {fmt(fapMessages / 24, 1)}&nbsp;messages per hour.\n            </p>\n          </Tooltip>\n        }\n      >\n        <div className=\"Result-fairaccess\">\n          <div className=\"Result-fairaccess-messages\">\n            {fmt((24 * 3600) / fapMessages, 1)}\n            <span className=\"Result-unit\">\n              sec\n              <br />\n              (avg)\n            </span>\n          </div>\n          <div>\n            <span className=\"Result-fairaccess-messages-per-hour\">{fmt(fapMessages / 24, 1)}</span>\n            <span className=\"Result-unit Result-unit-hour\">\n              avg\n              <br />\n              /hour\n            </span>\n          </div>\n          <div className=\"Result-fairaccess-messages-per-day\">\n            {fmt(Math.floor(fapMessages), 0)}\n            <span className=\"Result-unit\">\n              msg\n              <br />\n              /24h\n            </span>\n          </div>\n        </div>\n      </OverlayTrigger>\n    </>\n  );\n}\n","import React from 'react';\nimport {Region} from '../../AppConfig';\nimport Airtime, {CodingRate} from '../../lora/Airtime';\nimport {Result} from './Result';\n\ntype ResultsProps = {\n  region: Region;\n  packetSize: number;\n  codingRate: CodingRate;\n};\n\n/**\n * Shows the results of the airtime calculations.\n */\nexport default function Results({region, packetSize, codingRate}: ResultsProps) {\n  if (!codingRate) {\n    return null;\n  }\n\n  const results = region.dataRates.map((dr, idx) => {\n    const airtime = Airtime.calculate(packetSize, dr.sf, dr.bw, codingRate);\n    const tooLong = region.maxDwellTime && airtime > region.maxDwellTime;\n    const oddEven = `Results-result-${idx % 2 ? 'odd' : 'even'}`;\n    const highlight = `Results-result-highlight-${tooLong ? 'warning' : dr.highlight || 'none'}`;\n\n    return (\n      <div key={dr.name} className={`Results-result ${oddEven} ${highlight}`}>\n        <Result dr={dr} airtime={airtime} maxDwellTime={region.maxDwellTime} />\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div className={`Results-grid Results-grid-${results.length}`}>\n        <div className={`Results-legend`}>\n          <div>data rate</div>\n          <div>airtime</div>\n          <div>1%&nbsp;max duty&nbsp;cycle</div>\n          <div>fair access policy</div>\n        </div>\n        {results}\n      </div>\n    </>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport './HorizontalScroll.scss';\n\ntype HorizontalScrollProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Wraps the children in a container that makes it never wrap, removes any\n * scrollbars and adds buttons for scrolling.\n */\nexport default function HorizontalScroll({children}: HorizontalScrollProps) {\n  const scrollContainer = useRef<HTMLDivElement>(null);\n  const [hasOverflowLeft, setHasOverflowLeft] = useState(false);\n  const [hasOverflowRight, setHasOverflowRight] = useState(false);\n  const [resize] = useState({width: -1, height: -1});\n\n  const scrollX = (x: number) => {\n    const scroll = scrollContainer.current;\n    if (scroll) {\n      scroll.scrollBy(x, 0);\n    }\n  };\n\n  const scrollLeft = () => {\n    scrollX(-40);\n  };\n\n  const scrollRight = () => {\n    scrollX(40);\n  };\n\n  useEffect(() => {\n    const scroll = scrollContainer.current;\n    const handleScroll = () => {\n      if (!scroll) {\n        console.log('No scroll element');\n      } else {\n        const hasOverflowLeft = scroll.scrollLeft > 0;\n        // Allow for 1 pixel of rounding errors\n        const hasOverflowRight = scroll.scrollWidth - scroll.offsetWidth > scroll.scrollLeft + 1;\n        setHasOverflowLeft(hasOverflowLeft);\n        setHasOverflowRight(hasOverflowRight);\n      }\n    };\n\n    if (scroll) {\n      // Initial configuration\n      handleScroll();\n      window.addEventListener('resize', handleScroll);\n      scroll.addEventListener('scroll', handleScroll);\n      return () => {\n        scroll.removeEventListener('scroll', handleScroll);\n        window.removeEventListener('resize', handleScroll);\n      };\n    }\n  }, [resize]);\n\n  return (\n    <div\n      className={\n        'd-flex justify-content-center align-items-center horizontal-scroll' +\n        (hasOverflowLeft ? ' horizontal-scroll--overflow-left' : '') +\n        (hasOverflowRight ? ' horizontal-scroll--overflow-right' : '')\n      }\n    >\n      <div\n        className={\n          'horizontal-scroll__button' +\n          (hasOverflowLeft ? ' horizontal-scroll__button--enabled' : '')\n        }\n        onClick={scrollLeft}\n      >\n        &lsaquo;\n      </div>\n      <div className={'horizontal-scroll__content table-responsive'} ref={scrollContainer}>\n        {children}\n      </div>\n      <div\n        className={\n          'horizontal-scroll__button' +\n          (hasOverflowRight ? ' horizontal-scroll__button--enabled' : '')\n        }\n        onClick={scrollRight}\n      >\n        &rsaquo;\n      </div>\n    </div>\n  );\n}\n","import {History, Location} from 'history';\nimport {AppConfig, Network, Region} from '../../AppConfig';\n\n/**\n * Custom URL handling:\n *\n * - Updated URL for almost each change in the user input\n * - URL does not include default values, and no trailing slash if all\n * parameters are defaults\n * - Changing the network or region only replaces part of the URL, without\n * wiping the trailing parameters\n */\n\nexport function parseUrl(\n  history: History,\n  location: Location,\n  config: AppConfig\n): {network: Network | undefined; region: Region | undefined; parameters: string | undefined} {\n  // Due to using `<Router basename={process.env.PUBLIC_URL}>`, even when deployed in a subfolder,\n  // location.pathname will only include a leading slash followed by our application's URL segments.\n  // So, no need to strip process.env.PUBLIC_URL here.\n  const [, networkName, regionName, parameters] = location.pathname.split('/');\n  const network = config.networks.find((network) => network.name === networkName);\n  const region = network ? network.regions.find((region) => region.name === regionName) : undefined;\n  return {network, region, parameters};\n}\n\nexport function setUrl(\n  history: History,\n  location: Location,\n  config: AppConfig,\n  network: Network,\n  region: Region,\n  parameters?: string\n) {\n  const current = parseUrl(history, location, config);\n  // current.parameters might be undefined as well\n  const params = parameters === undefined ? current.parameters : parameters;\n  const url = '/' + network.name + '/' + region.name + (params ? '/' + params : '');\n  if (location.pathname === url) {\n    console.log(`No URL change needed; ${url}`);\n    return;\n  }\n  // Due to using `<Router basename={process.env.PUBLIC_URL}>` this adds the process.env.PUBLIC_URL prefix\n  history.replace(url);\n}\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ReactMarkdown from 'react-markdown';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {AppConfig, Region} from '../../AppConfig';\nimport {CodingRate} from '../../lora/Airtime';\nimport UserInput from '../input/UserInput';\nimport Results from '../result/Results';\nimport HorizontalScroll from '../scroll/HorizontalScroll';\nimport {parseUrl, setUrl} from './Router';\n\ntype CalculatorProps = {\n  config: AppConfig;\n} & RouteComponentProps;\n\n/**\n * The user inputs and the calculated results.\n *\n * Most state is also kept in the URL, as we want that to be copy-paste ready.\n */\nexport default function Calculator(props: CalculatorProps) {\n  // The real defaults are set in the UserInput component, and posted back\n  // using callbacks\n  const [packetSize, setPacketSize] = useState<number>(null as any);\n  const [codingRate, setCodingRate] = useState<CodingRate>(null as any);\n\n  const changeUrl = setUrl.bind(null, props.history, props.location, props.config);\n  const {network, region, parameters} = parseUrl(props.history, props.location, props.config);\n\n  if (!network) {\n    const n = props.config.networks[0];\n    const r = n.regions.find((r) => r.name === n.defaultRegion) as Region;\n    changeUrl(n, r);\n    return null;\n  }\n\n  if (!region) {\n    const r = network.regions.find((r) => r.name === network.defaultRegion) as Region;\n    changeUrl(network, r);\n    return null;\n  }\n\n  const handlePacketSizeChange = (size: number) => {\n    console.log('packet size', packetSize, size);\n    setPacketSize(size);\n  };\n\n  const handleCodingRateChange = (cr: CodingRate) => {\n    console.log('coding rate', codingRate, cr);\n    setCodingRate(cr);\n  };\n\n  /**\n   * Saves the updated user configuration in the current URL.\n   */\n  const handleParametersChange = (parameters: string) => {\n    console.log('URL', parameters);\n    changeUrl(network, region, parameters);\n  };\n\n  const setRegion = (region: Region) => {\n    console.log('region', region);\n    changeUrl(network, region);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <HorizontalScroll>\n            <ButtonGroup>\n              {network.regions.map((r) => (\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"sm\"\n                  active={r.name === region.name}\n                  disabled={!r.dataRates}\n                  key={r.name}\n                  onClick={() => setRegion(r)}\n                >\n                  {r.label}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </HorizontalScroll>\n        </Col>\n      </Row>\n\n      <Row>\n        <hr />\n      </Row>\n\n      <Row className=\"justify-content-sm-center\">\n        <Col>\n          <h3>{region.title}</h3>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"auto\">\n          <UserInput\n            userConfig={parameters}\n            setUserConfig={handleParametersChange}\n            setPacketSize={handlePacketSizeChange}\n            setCodingRate={handleCodingRateChange}\n          />\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-sm-center\">\n        <Col>\n          <Results region={region} packetSize={packetSize} codingRate={codingRate} />\n          <hr />\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"8\">{region.limitations && <ReactMarkdown source={region.limitations} />}</Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"8\">{region.countries && <ReactMarkdown source={region.countries} />}</Col>\n      </Row>\n    </>\n  );\n}\n","import axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport GithubCorner from 'react-github-corner';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.scss';\nimport {AppConfig} from './AppConfig';\nimport Calculator from './components/calculator/Calculator';\n\n/**\n * Loads the JSON configuration file and renders the application.\n */\nexport default function App() {\n  const configUrl = process.env.PUBLIC_URL + '/config.json';\n  const [progress, setProgress] = useState<string | null>('Loading configuration...');\n  const [config, setConfig] = useState({} as AppConfig);\n\n  // Given the empty array for deps, this only runs when component mounts;\n  // https://reactjs.org/docs/hooks-reference.html#conditionally-firing-an-effect\n  useEffect(() => {\n    let didCancel = false;\n    const fetchConfig = async () => {\n      try {\n        // By default, axios expects JSON in UTF8, and converts that on the fly\n        const result = (await axios.get<AppConfig>(configUrl)).data;\n        if (!didCancel) {\n          setProgress(null);\n          setConfig(result);\n        }\n      } catch (error) {\n        // TODO fine for 404, but this does not catch JSON parse errors?\n        setProgress(\n          `Failed to load configuration ${process.env.PUBLIC_URL} ${configUrl}: ${error}`\n        );\n      }\n    };\n\n    // Workaround to suppress the following React warning:\n    //   Warning: useEffect function must return a cleanup function or nothing.\n    //   Promises and useEffect(async () => ...) are not supported, but you can\n    //   call an async function inside an effect.\n    // This still makes the compiler warn about ignoring the returned Promise.\n    fetchConfig();\n    return () => {\n      didCancel = true;\n    };\n  }, [configUrl]);\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Container fluid className=\"App\">\n        <Row>\n          <Col>\n            <h1>Airtime calculator for LoRaWAN</h1>\n            {/*TODO check if IE does not show text null */}\n            <p>{progress}</p>\n          </Col>\n        </Row>\n        {config.networks && <Route render={(props) => <Calculator {...props} config={config} />} />}\n        <GithubCorner href=\"https://github.com/avbentem/airtime-calculator\" />\n      </Container>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see\n      // https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still\n        // exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}