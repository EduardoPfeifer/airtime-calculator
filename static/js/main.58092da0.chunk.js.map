{"version":3,"sources":["lora/MacCommands.ts","components/help/HelpTooltip.tsx","components/input/helpers.tsx","components/input/NumberInput.tsx","components/input/UserConfig.ts","components/input/UserInput.tsx","lora/Airtime.ts","components/result/helpers.ts","components/result/Result.tsx","components/result/Results.tsx","components/scroll/HorizontalScroll.tsx","components/calculator/Router.ts","components/calculator/Calculator.tsx","components/notification/Toast.tsx","hooks/clipboard/useClipboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["UplinkMacCommands102","name","size","DownlinkMacCommands102","HelpTooltip","content","showIcon","placement","children","useState","uniqueId","id","OverlayTrigger","overlay","Tooltip","className","withFormControl","state","value","onChange","event","target","currentTarget","setValue","NumberInput","min","useEffect","InputGroup","Prepend","Button","onClick","variant","aria-label","FormControl","type","placeholder","Append","v","defaults","payloadSize","headerSize","codingRate","UserInput","props","useParam","defaultValue","params","result","values","split","map","trim","test","console","warn","substr","join","lowerCase","toLowerCase","mac","concat","find","cmd","macCommands","decodeUserConfig","userConfig","addMacCommand","setPacketSize","setCodingRate","setUserConfig","parts","push","replace","encodeUserConfig","macCommandButtons","idx","key","Badge","pill","includes","Form","Row","Group","as","Col","xs","sm","lg","controlId","Label","Control","e","document","execCommand","blur","md","ButtonToolbar","Airtime","sf","bw","lowDrOptimize","explicitHeader","preambleLength","tSym","Math","pow","tPreamble","h","de","cr","payloadSymbNb","max","ceil","tPayload","fmt","n","digits","toLocaleString","minimumFractionDigits","maximumFractionDigits","withFullStops","lines","reduce","acc","line","slice","undefined","Result","seconds","region","dr","airtime","maxPhyPayloadSize","dcDelay","fapMessages","fapDelay","maxDwellTime","dwellTimeExceeded","sizeExceeded","maxMacPayloadSize","notes","label","role","href","location","floor","Results","packetSize","results","dataRates","calculate","tooLong","oddEven","highlight","length","data-label","HorizontalScroll","scrollContainer","useRef","hasOverflowLeft","setHasOverflowLeft","hasOverflowRight","setHasOverflowRight","width","height","resize","scrollX","x","scroll","current","scrollBy","handleScroll","scrollLeft","scrollWidth","offsetWidth","log","window","addEventListener","removeEventListener","ref","parseUrl","history","config","pathname","networkName","regionName","parameters","network","networks","regions","setUrl","url","Calculator","changeUrl","bind","r","defaultRegion","ButtonGroup","active","disabled","setRegion","title","limitations","source","countries","Toast","notification","endTime","setEndTime","lastTimeout","setLastTimeout","timeoutHandle","text","textContent","timeout","Date","now","clearTimeout","setTimeout","close","timeLeft","onClose","Header","toFixed","Body","elem","Array","useClipboard","setNotification","handler","getSelection","ClipboardEvent","clipboardData","selection","toString","hasUserSelection","getTooltip","tooltip","HTMLElement","innerHTML","setData","preventDefault","copyTooltip","grid","querySelector","getAttribute","groups","getChildrenByRole","columnHeaders","rows","thead","header","tbody","row","cells","cell","table","copyResultGrid","createClipboardHandler","from","querySelectorAll","App","configUrl","process","progress","setProgress","setConfig","didCancel","a","axios","get","data","fetchConfig","copyNotification","basename","Container","fluid","render","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58092da0.chunk.js","sourcesContent":["export type MacCommand = {\n  name: string;\n  /**\n   * The command's payload size, excluding the byte for the MAC command itself.\n   */\n  size: number;\n};\n\n/**\n * The LoRaWAN 1.0.2 MAC commands and their payload sizes, if any (excluding\n * the one byte for the MAC command itself). Some commands can be present in\n * the very same LoRaWAN packet multiple times.\n */\nexport const UplinkMacCommands102: MacCommand[] = [\n  {name: 'LinkCheckReq', size: 0},\n  {name: 'LinkAdrAns', size: 1},\n  {name: 'DutyCycleAns', size: 0},\n  {name: 'RXParamSetupAns', size: 1},\n  {name: 'DevStatusAns', size: 2},\n  {name: 'NewChannelAns', size: 1},\n  {name: 'DlChannelAns', size: 1},\n  {name: 'RXTimingSetupAns', size: 0},\n  {name: 'TxParamSetupAns', size: 0},\n];\n\nexport const DownlinkMacCommands102: MacCommand[] = [\n  {name: 'LinkCheckAns', size: 2},\n  {name: 'LinkAdrReq', size: 4},\n  {name: 'DutyCycleReq', size: 1},\n  {name: 'RXParamSetupReq', size: 4},\n  {name: 'DevStatusReq', size: 0},\n  {name: 'NewChannelReq', size: 5},\n  {name: 'DlChannelReq', size: 4},\n  {name: 'RXTimingSetupReq', size: 1},\n  {name: 'TxParamSetupReq', size: 1},\n];\n","import React, {PropsWithChildren, useState} from 'react';\nimport {Placement} from 'react-bootstrap/Overlay';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport {uniqueId} from 'lodash';\nimport './HelpTooltip.scss';\n\ntype HelpTooltipProps = {\n  content?: string | React.ReactElement;\n  showIcon?: boolean;\n  placement?: Placement;\n};\n\n/**\n * Add an information icon for a tooltip to the given element, if the optional\n * help text is set.\n */\nexport default function HelpTooltip({\n  content,\n  showIcon = false,\n  placement = 'auto-end',\n  children,\n}: PropsWithChildren<HelpTooltipProps>) {\n  const [id] = useState(() => uniqueId('HelpTooltip-'));\n\n  if (!content) {\n    return <>{children}</>;\n  }\n\n  return (\n    <OverlayTrigger placement={placement} overlay={<Tooltip id={id}>{content}</Tooltip>}>\n      <div className=\"HelpTooltip-trigger\">\n        {children}\n        {showIcon && (\n          <sup>\n            <small className=\"text-muted\">&#9432;</small>\n          </sup>\n        )}\n      </div>\n    </OverlayTrigger>\n  );\n}\n","import React, {Dispatch, SetStateAction} from 'react';\n\n/**\n * Returns an object that can be spread for use in Bootstrap forms, like\n * `<FormControl {...withFormControl(state)}/>`.\n */\nexport function withFormControl<T>(state: {value: T; setValue: Dispatch<SetStateAction<T>>}) {\n  // See https://github.com/react-bootstrap/react-bootstrap/issues/2781\n  function onChange(event: React.FormEvent<any>) {\n    // function onChange(event: React.FormEventHandler) {\n    const target = event.currentTarget;\n    state.setValue(typeof state.value === 'number' ? (+target.value as any) : target.value);\n  }\n\n  // FormControl expects a string for value\n  return {value: '' + state.value, onChange};\n}\n","import React, {Dispatch, SetStateAction, useEffect} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport {withFormControl} from './helpers';\nimport './NumberInput.scss';\n\ntype NumberInputProps = {\n  min?: number;\n  value: number;\n  setValue: Dispatch<SetStateAction<number>>;\n};\n\n/**\n * A Bootstrap form input field with decrement and increment buttons.\n */\nexport default function NumberInput({min = 0, value, setValue}: NumberInputProps) {\n  function dec() {\n    if (value > min) {\n      setValue(value - 1);\n    }\n  }\n\n  function inc() {\n    setValue((v) => v + 1);\n  }\n\n  useEffect(() => {\n    setValue(value);\n  }, [value, setValue]);\n\n  return (\n    <InputGroup>\n      <InputGroup.Prepend>\n        <Button onClick={dec} variant=\"outline-secondary\" aria-label=\"Decrease\">\n          -\n        </Button>\n      </InputGroup.Prepend>\n      <FormControl\n        {...withFormControl({value, setValue})}\n        type=\"number\"\n        className=\"NumberInput\"\n        min={min}\n        placeholder=\"Enter number\"\n      />\n      <InputGroup.Append>\n        <Button onClick={inc} variant=\"outline-secondary\" aria-label=\"Increase\">\n          +\n        </Button>\n      </InputGroup.Append>\n    </InputGroup>\n  );\n}\n","import {CodingRate} from '../../lora/Airtime';\nimport {DownlinkMacCommands102, MacCommand, UplinkMacCommands102} from '../../lora/MacCommands';\n\ntype UserConfig = {\n  macCommands?: MacCommand[];\n} & typeof defaults;\n\nexport const defaults = {\n  payloadSize: 12,\n  headerSize: 13,\n  codingRate: '4/5' as CodingRate,\n};\n\n/**\n * Takes the first integer argument to be the application payload size, the\n * second as the LoRaWAN header size, a single string starting with \"cr\" as the\n * coding rate, and all other values as possible MAC commands.\n */\nexport function decodeUserConfig(params: string = ''): UserConfig {\n  const result: UserConfig = {} as any;\n  const values = params.split(',').map((v) => v.trim());\n  for (let value of values) {\n    if (value === '') {\n      continue;\n    }\n\n    if (/^\\d+$/.test(value)) {\n      // The first integer denotes the payload size, the second the header size\n      if (!result.payloadSize) {\n        result.payloadSize = +value;\n      } else if (!result.headerSize) {\n        result.headerSize = +value;\n      } else {\n        console.warn(\n          `Ignored numeric value ${value}; already parsed both payloadSize and headerSize`\n        );\n      }\n      continue;\n    }\n\n    if (/^cr4[5678]$/i.test(value)) {\n      if (!result.codingRate) {\n        result.codingRate = value.substr(2).split('').join('/') as CodingRate;\n      } else {\n        console.warn(`Ignored string value ${value}; already parsed codingRate`);\n      }\n      continue;\n    }\n\n    // Case-insensitive search in both the uplink and downlink MAC commands\n    const lowerCase = value.toLowerCase();\n    const mac = UplinkMacCommands102.concat(DownlinkMacCommands102).find(\n      (cmd) => cmd.name.toLowerCase() === lowerCase\n    );\n    if (mac) {\n      result.macCommands = (result.macCommands || []).concat(mac);\n    } else {\n      console.warn(`Ignored string value ${value}; no matching MAC command found`);\n    }\n  }\n\n  return {...defaults, ...result};\n}\n\n/**\n * Encodes the user inputs for use in an URL segment.\n */\nexport function encodeUserConfig(\n  payloadSize: number,\n  headerSize: number,\n  codingRate?: CodingRate,\n  macCommands?: MacCommand[]\n) {\n  const parts: (string | number)[] = [];\n  if (payloadSize !== defaults.payloadSize || headerSize !== defaults.headerSize) {\n    parts.push(payloadSize);\n  }\n  if (headerSize !== defaults.headerSize) {\n    parts.push(headerSize);\n  }\n  if (codingRate && codingRate !== defaults.codingRate) {\n    parts.push('cr' + codingRate.replace('/', ''));\n  }\n  if (macCommands) {\n    parts.push(...macCommands.map((cmd) => cmd.name));\n  }\n  return parts.join(',');\n}\n","import React, {MouseEvent, useEffect, useState} from 'react';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport {FaRegCopy} from 'react-icons/fa';\nimport {CodingRate} from '../../lora/Airtime';\nimport {MacCommand, UplinkMacCommands102} from '../../lora/MacCommands';\nimport HelpTooltip from '../help/HelpTooltip';\nimport {withFormControl} from './helpers';\nimport NumberInput from './NumberInput';\nimport {decodeUserConfig, encodeUserConfig} from './UserConfig';\n\n/**\n * The components determines its parameters given its URL fragment, and only\n * tells the parent component about the total packet size and the coding rate.\n */\ntype UserConfigProps = {\n  userConfig?: string;\n  setPacketSize: (size: number) => void;\n  setCodingRate: (cr: CodingRate) => void;\n  setUserConfig: (fragment: string) => void;\n};\n\n/**\n * Form using some controlled components to input the packet's details.\n *\n * TODO The state is maintained by the parent component.\n *\n * This reports the total LoRa packet size, the coding rate and its own\n * fragment in the URL to its parent.\n *\n * /ttn/eu868/1.0.x,4/5,15,LinkCheckReq,LinkAdrAns,DutyCycleAns,RXParamSetupAns,DevStatusAns,NewChannelAns,RXTimingSetupAns,TxParamSetupAns,DlChannelAns\n *\n *\n */\nexport default function UserInput(props: UserConfigProps) {\n  function useParam<T>(defaultValue: T) {\n    const [value, setValue] = useState(defaultValue);\n    return {value, setValue};\n  }\n\n  const params = decodeUserConfig(props.userConfig);\n  const payloadSize = useParam(params.payloadSize);\n  const headerSize = useParam(params.headerSize);\n  const codingRate = useParam(params.codingRate);\n  const macCommands = useParam(params.macCommands);\n\n  function increaseHeaderSize(size: number) {\n    headerSize.setValue((v) => v + size);\n    // Same result:\n    // headerSize.setValue(headerSize.value + size);\n  }\n\n  function addMacCommand(cmd: MacCommand) {\n    macCommands.setValue((macCommands.value || []).concat(cmd));\n    increaseHeaderSize(cmd.size + 1);\n  }\n\n  useEffect(() => {\n    props.setPacketSize(headerSize.value + payloadSize.value);\n  }, [props, headerSize.value, payloadSize.value]);\n\n  useEffect(() => {\n    props.setCodingRate(codingRate.value);\n  }, [props, codingRate.value]);\n\n  /**\n   * Tells the parent that the user's configuration has changed, to keep the\n   * URL synchronized with the current inputs.\n   *\n   * Rather than this callback, we could use a Route in the parent component\n   * and manage our own URL segment here. However, by design, when the user\n   * configuration only uses default values then that segment would not exist.\n   * And as the routing does not provide an API to only change a specific URL\n   * segment, this component would need to know about the URL segments of its\n   * parent to reliably change its own segment. (Like to detect excessive\n   * slashes and avoid endless loops.) Instead, the URL segment is passed to\n   * this component, and this component notifies the parent about changes. The\n   * parent needs to know about this segment anyhow, like when the parent\n   * component changes the region for which the user configuration should be\n   * preserved.\n   */\n  useEffect(() => {\n    props.setUserConfig(\n      encodeUserConfig(payloadSize.value, headerSize.value, codingRate.value, macCommands.value)\n    );\n  }, [props, headerSize.value, payloadSize.value, codingRate.value, macCommands.value]);\n\n  /**\n   * Trigger the built-in copy event.\n   */\n  function copy(e: MouseEvent) {\n    document.execCommand('copy');\n    // We need `currentTarget` rather than `target`, to support clicking the\n    // icon in the button, in which case the button is not the (first) target\n    (e.currentTarget as HTMLElement).blur();\n  }\n\n  const macCommandButtons = UplinkMacCommands102.map((cmd, idx) => (\n    <div key={idx}>\n      <Badge\n        onClick={() => addMacCommand(cmd)}\n        pill\n        variant={params.macCommands && params.macCommands.includes(cmd) ? 'primary' : 'secondary'}\n      >\n        {cmd.name} {cmd.size}\n      </Badge>\n      &nbsp;\n    </div>\n  ));\n\n  return (\n    <>\n      <Form>\n        <Form.Row className=\"justify-content-center\">\n          <Form.Group as={Col} xs={4} sm={3} lg={2} controlId=\"formHeaderSize\">\n            <HelpTooltip\n              showIcon={true}\n              content=\"For an uplink and downlink, the overhead is at least 13 bytes: MHDR (1), DevAddr (4), FCtrl (1), FCnt (2), FPort (1) and MIC (4). Also, FOpts may include MAC commands.\"\n            >\n              <Form.Label>overhead size</Form.Label>\n            </HelpTooltip>\n            <NumberInput {...headerSize} min={13} />\n          </Form.Group>\n\n          <Form.Group as={Col} xs={4} sm={3} lg={2} controlId=\"formApplicationPayloadSize\">\n            <HelpTooltip\n              showIcon={true}\n              content=\"The application payload size. May be empty for a simple ACK or if the packet only includes MAC commands.\"\n            >\n              <Form.Label>payload size</Form.Label>\n            </HelpTooltip>\n            <NumberInput {...payloadSize} />\n          </Form.Group>\n\n          {/* Only expose the coding rate input when a non-default is used in the URL. */}\n          {/* A future version may include some \"advanced settings\" option. */}\n          {codingRate.value !== '4/5' && (\n            <Form.Group as={Col} xs={4} sm={3} lg={2} controlId=\"formCodingRate\">\n              <HelpTooltip\n                showIcon={true}\n                content=\"The coding rate (CR) used for forward error correction (FEC). Always 4/5 for LoRaWAN.\"\n              >\n                <Form.Label>coding rate</Form.Label>\n              </HelpTooltip>\n              <Form.Control as=\"select\" {...withFormControl(codingRate)}>\n                <option value=\"4/5\">4/5</option>\n                <option value=\"4/6\">4/6</option>\n                <option value=\"4/7\">4/7</option>\n                <option value=\"4/8\">4/8</option>\n              </Form.Control>\n            </Form.Group>\n          )}\n\n          <Form.Group as={Col} xs={1} controlId=\"formCopy\">\n            <HelpTooltip\n              showIcon={true}\n              content=\"If any text is selected, copy that. Otherwise, when a tooltip is active, copy its text. (Use the keyboard on a desktop browser.) Or else, copy the results.\"\n            >\n              <Form.Label>copy</Form.Label>\n            </HelpTooltip>\n            <div>\n              <Button variant=\"outline-secondary\" aria-label=\"Copy\" onClick={copy}>\n                <FaRegCopy size=\"1em\" />\n              </Button>\n            </div>\n          </Form.Group>\n        </Form.Row>\n\n        {/* TODO Work in progress: somehow allow for adding/removing MAC commands; for now only when already in URL. */}\n        {params.macCommands && (\n          <>\n            <Form.Row className=\"justify-content-md-center\">\n              <Col md=\"8\">\n                <Form.Label>MAC command</Form.Label>\n                <ButtonToolbar aria-label=\"MAC commands\">{macCommandButtons}</ButtonToolbar>\n              </Col>\n            </Form.Row>\n            <br />\n          </>\n        )}\n      </Form>\n    </>\n  );\n}\n","export type CodingRate = '4/5' | '4/6' | '4/7' | '4/8';\n\nexport default class Airtime {\n  /**\n   * Calculates the LoRa airtime in milliseconds.\n   *\n   * See https://lora-developers.semtech.com/library/product-documents/ for the\n   * equations in AN1200.13 \"LoRa Modem Designer’s Guide\".\n   *\n   * Spreading factor and bandwidth together define the so called data rate.\n   *\n   * @param size full packet size. For LoRaWAN this includes the LoRaWAN MAC\n   *   header (about 9 bytes when no MAC commands are included), the application\n   *   payload, and the MIC (4 bytes).\n   * @param sf spreading factor, 6..12 (6 is not used in LoRaWAN)\n   * @param bw bandwidth in kHz, typically 125, 250 or 500\n   * @param codingRate coding rate, '4/5', '4/6', '4/7' or '4/8'. For LoRaWAN\n   *   this is always '4/5'.\n   * @param lowDrOptimize low data rate optimization, 'auto', true or false.\n   *   This is usually enabled for low data rates, to avoid issues with drift\n   *   of the crystal reference oscillator due to either temperature change or\n   *   motion. When enabled, specifically for 125 kHz bandwidth and SF11 and\n   *   SF12, this adds a small overhead to increase robustness to reference\n   *   frequency variations over the timescale of the packet.\n   * @param explicitHeader if the LoRa header is present, true or false. This\n   *   is the low-level header that defines, e.g., coding rate, payload length\n   *   and the presence of a CRC checksum. In plain LoRa it can be left out if\n   *   each transmission uses the very same parameters and the receiver is\n   *   aware of those. For LoRaWAN, where at least the payload length is not\n   *   fixed, the low-level LoRa header is always enabled.\n   * @param preambleLength number of preamble symbols. For LoRaWAN this is 8.\n   */\n  static calculate(\n    size: number,\n    sf: number,\n    bw: number,\n    codingRate: CodingRate = '4/5',\n    lowDrOptimize: 'auto' | true | false = 'auto',\n    explicitHeader: boolean = true,\n    preambleLength = 8\n  ) {\n    // All times in milliseconds\n    const tSym = (Math.pow(2, sf) / (bw * 1000)) * 1000;\n    const tPreamble = (preambleLength + 4.25) * tSym;\n\n    // H = 0 when the header is enabled, H = 1 when no header is present.\n    const h = explicitHeader ? 0 : 1;\n    // DE = 1 when the low data rate optimization is enabled, DE = 0 for\n    // disabled. When 'auto' then only for SF11 and SF12, on 125kHz. Allow for\n    // programming errors that pass string values from, e.g., some form input.\n    const de =\n      (lowDrOptimize === 'auto' && +bw === 125 && +sf >= 11) || lowDrOptimize === true ? 1 : 0;\n    // CR is the coding rate from 1 to 4\n    const cr = +codingRate[2] - 4;\n    const payloadSymbNb =\n      8 +\n      Math.max(\n        Math.ceil((8 * size - 4 * sf + 28 + 16 - 20 * h) / (4 * (sf - 2 * de))) * (cr + 4),\n        0\n      );\n    const tPayload = payloadSymbNb * tSym;\n\n    return tPreamble + tPayload;\n  }\n}\n","export function fmt(n: number, digits: number) {\n  return n.toLocaleString('en-US', {minimumFractionDigits: digits, maximumFractionDigits: digits});\n}\n\nexport function fmtSeconds(seconds: number) {\n  // 1.0 is actually a plural number too\n  if (seconds >= 120.05) {\n    return `${fmt(seconds / 60, 1)} minutes`;\n  }\n  return `${fmt(seconds, 1)} seconds`;\n}\n\n/**\n * Join non-empty fragments into a sentence, adding full stops when combining\n * more than one fragment.\n */\nexport function withFullStops(...lines: (string | false | 0 | undefined)[]) {\n  return (\n    lines.reduce((acc: string, line) => {\n      if (!line) {\n        return acc;\n      }\n      return (\n        acc +\n        (acc && acc.slice(-1) !== '.' ? '. ' : acc ? ' ' : '') +\n        line +\n        (acc && line.slice(-1) !== '.' ? '.' : '')\n      );\n    }, '') || undefined\n  );\n}\n","import React from 'react';\nimport {DataRate, Region} from '../../AppConfig';\nimport HelpTooltip from '../help/HelpTooltip';\nimport {fmt, fmtSeconds, withFullStops} from './helpers';\n\ntype ResultGridProps = {\n  region: Region;\n  dr: DataRate;\n  size: number;\n  airtime: number;\n  maxPhyPayloadSize: number;\n};\n\n/**\n * A single result, showing the data rate (SF, bandwidth), time on air and\n * calculated limits.\n */\nexport function Result({region, dr, size, airtime, maxPhyPayloadSize}: ResultGridProps) {\n  // Minimum delay in seconds between two packet starts, for maximum 1% duty cycle\n  const dcDelay = airtime / 0.01 / 1000;\n\n  // Maximum messages/day for 30 seconds TTN Fair Access Policy\n  const fapMessages = 30000 / airtime;\n  const fapDelay = (24 * 3600) / fapMessages;\n\n  const maxDwellTime = region.maxDwellTime || 0;\n  const dwellTimeExceeded = maxDwellTime > 0 && airtime > maxDwellTime;\n  const sizeExceeded = dr.maxMacPayloadSize && size > maxPhyPayloadSize;\n\n  // The single `&#x200b;` and double `&#x200b;&#x200b;` markers are used to add\n  // whitespace and newlines when copying; see useClipboard.\n  return (\n    <>\n      <HelpTooltip\n        content={withFullStops(\n          dr.notes,\n          dr.maxMacPayloadSize &&\n            (sizeExceeded\n              ? `The total payload of ${size} bytes exceeds the maximum packet size of ${maxPhyPayloadSize} bytes for ${region.label} SF${dr.sf}BW${dr.bw}`\n              : `For ${region.label} SF${dr.sf}BW${dr.bw} the maximum total packet size is ${maxPhyPayloadSize} bytes`)\n        )}\n      >\n        <div\n          className={`Result-datarate ${\n            sizeExceeded ? 'Result-has-warning' : dr.notes ? 'Result-has-note' : ''\n          }`}\n          role=\"cell\"\n        >\n          <div className=\"Result-dr\">{dr.name}</div>\n          <div>\n            &#x200b;&#x200b;\n            <span className=\"Result-sf\">SF{dr.sf}</span>\n            &#x200b;&#x200b;\n            <span className=\"Result-unit Result-unit-bw\">\n              BW\n              <br />\n              {dr.bw}\n            </span>\n          </div>\n          {sizeExceeded && (\n            <div className={'Result-datarate-warning'}>&#x200b;&#x200b;max size exceeded</div>\n          )}\n        </div>\n      </HelpTooltip>\n\n      <HelpTooltip\n        content={\n          <>\n            On SF{dr.sf}BW{dr.bw}, a total packet size of {size} bytes{' '}\n            <a href={document.location.href}>needs {fmt(airtime, 2)} milliseconds time on air</a>.\n            {dwellTimeExceeded && (\n              <>\n                {' '}\n                This exceeds the maximum dwell time of {maxDwellTime} milliseconds for{' '}\n                {region.label}.\n              </>\n            )}\n          </>\n        }\n      >\n        <div\n          className={`Result-airtime ${dwellTimeExceeded ? 'Result-has-warning' : ''}`}\n          role=\"cell\"\n        >\n          <div>\n            {fmt(airtime, 1)}&#x200b;<span className=\"Result-unit\">ms</span>\n          </div>\n          {dwellTimeExceeded && (\n            <div className={'Result-airtime-warning'}>&#x200b;&#x200b;max dwell time exceeded</div>\n          )}\n        </div>\n      </HelpTooltip>\n\n      <HelpTooltip\n        content={\n          <>\n            If regional legal or LoRaWAN maximum duty cycles apply, then a 1% maximum duty cycle\n            needs a <em>minimum</em> of {fmt(dcDelay, 2)} seconds between <em>any</em> subsequent\n            packet starts in the same subband.\n          </>\n        }\n      >\n        <div className=\"Result-dutycycle\" role=\"cell\">\n          <div>\n            {fmt(dcDelay, 1)}\n            &#x200b;\n            <span className=\"Result-unit\">sec</span>\n            &#x200b;&#x200b;\n          </div>\n          <div>\n            {fmt(Math.floor(3600 / dcDelay), 0)}\n            &#x200b;\n            <span className=\"Result-unit\">\n              msg\n              <br />\n              /hour\n            </span>\n          </div>\n        </div>\n      </HelpTooltip>\n\n      <HelpTooltip\n        content={\n          <>\n            {/*{ Links are only added for copy/pasting rich text. On touch devices links in tooltips\n             would be clickable, but still are rendered invisibly, to not confuse the user clicking\n             the link that points back to this very location. }*/}\n            <p>\n              The <a href=\"https://www.thethingsnetwork.org/forum/t/1300\">TTN Fair Access Policy</a>{' '}\n              allows for at most 30 seconds time on air per device, per 24 hours. So, an{' '}\n              <a href={document.location.href}>\n                airtime of {fmt(airtime, 1)} milliseconds for {size} bytes on SF{dr.sf}BW{dr.bw}\n              </a>{' '}\n              imposes a limit of {fmt(fapMessages, 1)} messages per day.\n            </p>\n            {/* Add newlines between paragraphs in case we're copy/pasting plain text. */}\n            {'\\n\\n'}\n            <p>\n              When transmitting all day, <strong>on average</strong> this needs a minimum of{' '}\n              {fmtSeconds(fapDelay)} between the starts of two uplinks, or a maximum of{' '}\n              {fmt(fapMessages / 24, 1)}\n              &nbsp;messages per hour.\n            </p>\n          </>\n        }\n      >\n        <div className=\"Result-fairaccess\" role=\"cell\">\n          <div className=\"Result-fairaccess-messages\">\n            {fmt((24 * 3600) / fapMessages, 1)}\n            &#8203;\n            <span className=\"Result-unit\">\n              sec&#8203;\n              <br />\n              (avg)\n            </span>\n            &#8203;&#8203;\n          </div>\n          <div>\n            <span className=\"Result-fairaccess-messages-per-hour\">{fmt(fapMessages / 24, 1)}</span>\n            &#8203;\n            <span className=\"Result-unit Result-unit-hour\">\n              avg\n              <br />\n              /hour\n            </span>\n            &#8203;&#8203;\n          </div>\n          <div className=\"Result-fairaccess-messages-per-day\">\n            {fmt(Math.floor(fapMessages), 0)}\n            &#8203;\n            <span className=\"Result-unit\">\n              msg\n              <br />\n              /24h\n            </span>\n          </div>\n        </div>\n      </HelpTooltip>\n    </>\n  );\n}\n","import React from 'react';\nimport {Region} from '../../AppConfig';\nimport Airtime, {CodingRate} from '../../lora/Airtime';\nimport {Result} from './Result';\n\ntype ResultsProps = {\n  region: Region;\n  packetSize: number;\n  codingRate: CodingRate;\n};\n\n/**\n * Shows the results of the airtime calculations.\n */\nexport default function Results({region, packetSize, codingRate}: ResultsProps) {\n  if (!codingRate) {\n    return null;\n  }\n\n  const results = region.dataRates.map((dr, idx) => {\n    const airtime = Airtime.calculate(packetSize, dr.sf, dr.bw, codingRate);\n    // PHYPayload = MHDR[1] | MACPayload[..] | MIC[4]\n    const maxPhyPayloadSize = dr.maxMacPayloadSize + 5;\n    const tooLong =\n      (region.maxDwellTime && airtime > region.maxDwellTime) ||\n      (dr.maxMacPayloadSize && packetSize > maxPhyPayloadSize);\n    const oddEven = `Results-result-${idx % 2 ? 'odd' : 'even'}`;\n    const highlight = `Results-result-highlight-${tooLong ? 'warning' : dr.highlight || 'none'}`;\n\n    return (\n      <div key={dr.name} className={`Results-result ${oddEven} ${highlight}`} role={'row'}>\n        <Result\n          size={packetSize}\n          region={region}\n          dr={dr}\n          airtime={airtime}\n          maxPhyPayloadSize={maxPhyPayloadSize}\n        />\n      </div>\n    );\n  });\n\n  return (\n    <>\n      <div\n        className={`Results-grid Results-grid-${results.length}`}\n        role=\"table\"\n        data-label={`Time on air and limitations for a full LoRaWAN packet of ${packetSize} bytes in ${region.label}:`}\n      >\n        <div role=\"rowgroup\">\n          <div className={`Results-legend`} role=\"row\">\n            <div role=\"columnheader\">data rate</div>\n            <div role=\"columnheader\">airtime</div>\n            <div role=\"columnheader\">1%&nbsp;max duty&nbsp;cycle</div>\n            <div role=\"columnheader\">fair access policy</div>\n          </div>\n        </div>\n        <div role=\"rowgroup\">{results}</div>\n      </div>\n    </>\n  );\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport './HorizontalScroll.scss';\n\ntype HorizontalScrollProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Wraps the children in a container that makes it never wrap, removes any\n * scrollbars and adds buttons for scrolling.\n */\nexport default function HorizontalScroll({children}: HorizontalScrollProps) {\n  const scrollContainer = useRef<HTMLDivElement>(null);\n  const [hasOverflowLeft, setHasOverflowLeft] = useState(false);\n  const [hasOverflowRight, setHasOverflowRight] = useState(false);\n  const [resize] = useState({width: -1, height: -1});\n\n  const scrollX = (x: number) => {\n    const scroll = scrollContainer.current;\n    if (scroll) {\n      scroll.scrollBy(x, 0);\n    }\n  };\n\n  const scrollLeft = () => {\n    scrollX(-40);\n  };\n\n  const scrollRight = () => {\n    scrollX(40);\n  };\n\n  useEffect(() => {\n    const scroll = scrollContainer.current;\n    const handleScroll = () => {\n      if (!scroll) {\n        console.log('No scroll element');\n      } else {\n        const hasOverflowLeft = scroll.scrollLeft > 0;\n        // Allow for 1 pixel of rounding errors\n        const hasOverflowRight = scroll.scrollWidth - scroll.offsetWidth > scroll.scrollLeft + 1;\n        setHasOverflowLeft(hasOverflowLeft);\n        setHasOverflowRight(hasOverflowRight);\n      }\n    };\n\n    if (scroll) {\n      // Initial configuration\n      handleScroll();\n      window.addEventListener('resize', handleScroll);\n      scroll.addEventListener('scroll', handleScroll);\n      return () => {\n        scroll.removeEventListener('scroll', handleScroll);\n        window.removeEventListener('resize', handleScroll);\n      };\n    }\n  }, [resize]);\n\n  return (\n    <div\n      className={\n        'd-flex justify-content-center align-items-center horizontal-scroll' +\n        (hasOverflowLeft ? ' horizontal-scroll--overflow-left' : '') +\n        (hasOverflowRight ? ' horizontal-scroll--overflow-right' : '')\n      }\n    >\n      <div\n        className={\n          'horizontal-scroll__button' +\n          (hasOverflowLeft ? ' horizontal-scroll__button--enabled' : '')\n        }\n        onClick={scrollLeft}\n      >\n        &lsaquo;\n      </div>\n      <div className={'horizontal-scroll__content table-responsive'} ref={scrollContainer}>\n        {children}\n      </div>\n      <div\n        className={\n          'horizontal-scroll__button' +\n          (hasOverflowRight ? ' horizontal-scroll__button--enabled' : '')\n        }\n        onClick={scrollRight}\n      >\n        &rsaquo;\n      </div>\n    </div>\n  );\n}\n","import {History, Location} from 'history';\nimport {AppConfig, Network, Region} from '../../AppConfig';\n\n/**\n * Custom URL handling:\n *\n * - Updated URL for almost each change in the user input\n * - URL does not include default values, and no trailing slash if all\n * parameters are defaults\n * - Changing the network or region only replaces part of the URL, without\n * wiping the trailing parameters\n */\n\nexport function parseUrl(\n  history: History,\n  location: Location,\n  config: AppConfig\n): {network: Network | undefined; region: Region | undefined; parameters: string | undefined} {\n  // Due to using `<Router basename={process.env.PUBLIC_URL}>`, even when deployed in a subfolder,\n  // location.pathname will only include a leading slash followed by our application's URL segments.\n  // So, no need to strip process.env.PUBLIC_URL here.\n  const [, networkName, regionName, parameters] = location.pathname.split('/');\n  const network = config.networks.find((network) => network.name === networkName);\n  const region = network ? network.regions.find((region) => region.name === regionName) : undefined;\n  return {network, region, parameters};\n}\n\nexport function setUrl(\n  history: History,\n  location: Location,\n  config: AppConfig,\n  network: Network,\n  region: Region,\n  parameters?: string\n) {\n  const current = parseUrl(history, location, config);\n  // current.parameters might be undefined as well\n  const params = parameters === undefined ? current.parameters : parameters;\n  const url = '/' + network.name + '/' + region.name + (params ? '/' + params : '');\n  if (location.pathname === url) {\n    console.log(`No URL change needed; ${url}`);\n    return;\n  }\n  // Due to using `<Router basename={process.env.PUBLIC_URL}>` this adds the process.env.PUBLIC_URL prefix\n  history.replace(url);\n}\n","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport ReactMarkdown from 'react-markdown';\nimport {RouteComponentProps} from 'react-router-dom';\nimport {AppConfig, Region} from '../../AppConfig';\nimport {CodingRate} from '../../lora/Airtime';\nimport UserInput from '../input/UserInput';\nimport Results from '../result/Results';\nimport HorizontalScroll from '../scroll/HorizontalScroll';\nimport {parseUrl, setUrl} from './Router';\n\ntype CalculatorProps = {\n  config: AppConfig;\n} & RouteComponentProps;\n\n/**\n * The user inputs and the calculated results.\n *\n * Most state is also kept in the URL, as we want that to be copy-paste ready.\n */\nexport default function Calculator(props: CalculatorProps) {\n  // The real defaults are set in the UserInput component, and posted back\n  // using callbacks\n  const [packetSize, setPacketSize] = useState<number>(null as any);\n  const [codingRate, setCodingRate] = useState<CodingRate>(null as any);\n\n  const changeUrl = setUrl.bind(null, props.history, props.location, props.config);\n  const {network, region, parameters} = parseUrl(props.history, props.location, props.config);\n\n  if (!network) {\n    const n = props.config.networks[0];\n    const r = n.regions.find((r) => r.name === n.defaultRegion) as Region;\n    changeUrl(n, r);\n    return null;\n  }\n\n  if (!region) {\n    const r = network.regions.find((r) => r.name === network.defaultRegion) as Region;\n    changeUrl(network, r);\n    return null;\n  }\n\n  const handlePacketSizeChange = (size: number) => {\n    console.log('packet size', packetSize, size);\n    setPacketSize(size);\n  };\n\n  const handleCodingRateChange = (cr: CodingRate) => {\n    console.log('coding rate', codingRate, cr);\n    setCodingRate(cr);\n  };\n\n  /**\n   * Saves the updated user configuration in the current URL.\n   */\n  const handleParametersChange = (parameters: string) => {\n    console.log('URL', parameters);\n    changeUrl(network, region, parameters);\n  };\n\n  const setRegion = (region: Region) => {\n    console.log('region', region);\n    changeUrl(network, region);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <HorizontalScroll>\n            <ButtonGroup>\n              {network.regions.map((r) => (\n                <Button\n                  variant=\"outline-primary\"\n                  size=\"sm\"\n                  active={r.name === region.name}\n                  disabled={!r.dataRates}\n                  key={r.name}\n                  onClick={() => setRegion(r)}\n                >\n                  {r.label}\n                </Button>\n              ))}\n            </ButtonGroup>\n          </HorizontalScroll>\n        </Col>\n      </Row>\n\n      <Row>\n        <hr />\n      </Row>\n\n      <Row className=\"justify-content-sm-center\">\n        <Col>\n          <h3>{region.title}</h3>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Col>\n          <UserInput\n            userConfig={parameters}\n            setUserConfig={handleParametersChange}\n            setPacketSize={handlePacketSizeChange}\n            setCodingRate={handleCodingRateChange}\n          />\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Col>\n          <Results region={region} packetSize={packetSize} codingRate={codingRate} />\n          <hr />\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"8\">{region.limitations && <ReactMarkdown source={region.limitations} />}</Col>\n      </Row>\n\n      <Row className=\"justify-content-md-center\">\n        <Col md=\"8\">{region.countries && <ReactMarkdown source={region.countries} />}</Col>\n      </Row>\n    </>\n  );\n}\n","import React, {ReactElement, useEffect, useRef, useState} from 'react';\nimport {default as BsToast} from 'react-bootstrap/Toast';\nimport {AppNotification} from './AppNotification';\nimport './Toast.scss';\n\n/**\n * The interval at which the notification toast should be updated, like to show\n * some feedback to the user. (Of course, when there is no need for re-rendering\n * until endTime is reached, then one should rewrite this component to simply\n * set the timeout to match the end time.)\n *\n * Note that most browsers throttle timeouts for background tabs to 1 second.\n * But even then it's okay to specify a smaller number as this component uses\n * timestamps internally.\n */\nconst INTERVAL_MS = 1000;\n\ntype ToastProps = {\n  notification?: AppNotification;\n};\n\n/**\n * A basic, single (non-stacked) notification, that auto-hides based on the\n * length of the notification text.\n */\nexport default function Toast({notification}: ToastProps) {\n  const [endTime, setEndTime] = useState<number>(0);\n  const [lastTimeout, setLastTimeout] = useState<number>(0);\n  const timeoutHandle = useRef<number | null>(0);\n\n  // Handle new/changed notification\n  useEffect(() => {\n    if (notification) {\n      const text = textContent(notification.title) + textContent(notification.content);\n      const timeout = Math.max(3000, 70 * text.length);\n      // Assuming the new endTime is never the same as the last, this also\n      // triggers the next effect which sets the (first) timeout\n      setEndTime(Date.now() + timeout);\n    }\n  }, [notification]);\n\n  // Set a timer to update and eventually hide the notification\n  useEffect(() => {\n    if (timeoutHandle.current) {\n      // A timeout was already scheduled but the notification (and hence the end\n      // time) changed\n      window.clearTimeout(timeoutHandle.current);\n    }\n\n    // Ensure a new timeout is even scheduled when the end time expired just\n    // now: when a timeout has changed state for lastTimeout then this effect is\n    // not invoked until AFTER a new render completed. This could imply that\n    // during the render it would be decided that the notification should be\n    // displayed, but, due to time having advanced a bit, no new timeout would\n    // be scheduled right here. And as this effect does not change any state,\n    // no additional render would happen either, so outdated results would be\n    // added to the DOM and show until eventually a new notification were set.\n    if (endTime - lastTimeout > 0) {\n      timeoutHandle.current = window.setTimeout(() => {\n        timeoutHandle.current = null;\n        // Trigger component rendering and execution of this very effect\n        setLastTimeout(Date.now());\n      }, INTERVAL_MS);\n    }\n  }, [endTime, lastTimeout]);\n\n  const close = () => {\n    setEndTime(Date.now());\n  };\n\n  const timeLeft = (endTime - Date.now()) / 1000;\n\n  if (timeLeft <= 0 || !notification) {\n    return null;\n  }\n\n  return (\n    <BsToast className=\"Toast\" onClose={close} onClick={close}>\n      <BsToast.Header>\n        <strong className=\"mr-auto header\">{notification.title}</strong>\n        <small>{timeLeft.toFixed(0)}</small>\n      </BsToast.Header>\n      {notification.content ? <BsToast.Body>{notification.content}</BsToast.Body> : null}\n    </BsToast>\n  );\n}\n\n/**\n * Traverse any props.children to get their combined text content.\n *\n * This does not add whitespace for readability: `<p>Hello <em>world</em>!</p>`\n * yields `Hello world!` as expected, but `<p>Hello</p><p>world</p>` returns\n * `Helloworld`.\n *\n * NOTE: This may be very dependent on the internals of React.\n */\nfunction textContent(elem: ReactElement | string | undefined): string {\n  if (!elem) {\n    return '';\n  }\n\n  if (typeof elem === 'string') {\n    return elem;\n  }\n\n  // Debugging for basic content shows that props.children, if any, is either a\n  // ReactElement, or a string, or an Array with any combination. Like for\n  // `<p>Hello <em>world</em>!</p>`:\n  //\n  //   $$typeof: Symbol(react.element)\n  //   type: \"p\"\n  //   props:\n  //     children:\n  //       - \"Hello\"\n  //       - $$typeof: Symbol(react.element)\n  //         type: \"em\"\n  //         props:\n  //           children: \"world\"\n  //       - \"!\"\n  const children = elem.props && elem.props.children;\n\n  if (children instanceof Array) {\n    return children.map(textContent).join('');\n  }\n\n  return textContent(children);\n}\n","import React, {useEffect, useState} from 'react';\nimport {AppNotification} from '../../components/notification/AppNotification';\n\n/**\n * Bind browser's copy event to copy the user's selection, or the active tooltip\n * window, or the result grid, all as plain text and as HTML. Return a result\n * message for feedback to the user.\n *\n * When not using the keyboard to trigger this, a mouse-out event will likely\n * already have fired for any item that may have been showing a tooltip. On\n * touch devices, the animation to close the tooltip will still be running, so\n * the copy handler can still fetch the tooltip's contents.\n */\nexport default function useClipboard() {\n  const [notification, setNotification] = useState<AppNotification>();\n\n  useEffect(() => {\n    const handler = createClipboardHandler(setNotification);\n    window.addEventListener('copy', handler);\n    return () => {\n      window.removeEventListener('copy', handler);\n    };\n  }, []);\n\n  return {notification};\n}\n\nfunction createClipboardHandler(setNotification: (notification: AppNotification) => void) {\n  return (event: Event) => {\n    if (window.getSelection && event instanceof ClipboardEvent && event.clipboardData) {\n      if (hasUserSelection()) {\n        // Delegate to the browser and boldly assume that the system copy works\n        setNotification({\n          title: <>The selected text was copied</>,\n          content: (\n            <>\n              {hasTooltip() ? (\n                <>\n                  <p>\n                    <strong>Did you intend to copy the tooltip?</strong> Then ensure no text is\n                    selected when copying.\n                  </p>\n                </>\n              ) : (\n                <p>\n                  To copy a tooltip, ensure no text is selected. (And use the keyboard on a desktop\n                  browser.)\n                </p>\n              )}\n              <p>To copy the result grid, make sure no text is selected and no tooltip is shown.</p>\n            </>\n          ),\n        });\n        return;\n      }\n\n      if (copyTooltip(event)) {\n        setNotification({\n          title: 'The tooltip text was copied',\n          content: 'To copy the result grid, make sure no tooltip is shown while copying.',\n        });\n        return;\n      }\n\n      if (copyResultGrid(event)) {\n        setNotification({\n          title: 'The result grid was copied',\n          content: (\n            <>\n              <p>\n                To copy a tooltip, make sure it's shown while copying. (And use the keyboard on a\n                desktop browser.)\n              </p>\n            </>\n          ),\n        });\n      }\n\n      // Should not happen; delegate to the browser\n      return;\n    }\n\n    setNotification({\n      title: 'Unsupported browser',\n      content:\n        'Your browser does not support the enhanced copy function to copy the tooltip or result grid.',\n    });\n  };\n}\n\nfunction hasUserSelection() {\n  if (window.getSelection) {\n    const selection = window.getSelection();\n    return selection !== null && selection.toString() !== '';\n  }\n  // Unsupported browser\n  return false;\n}\n\nfunction getTooltip() {\n  return document.querySelector('[role=\"tooltip\"] .tooltip-inner');\n}\n\nfunction hasTooltip() {\n  return getTooltip() !== null;\n}\n\nfunction copyTooltip(event: ClipboardEvent) {\n  if (!event.clipboardData) {\n    return false;\n  }\n  const tooltip = getTooltip();\n  if (tooltip) {\n    if (tooltip instanceof HTMLElement && tooltip.innerHTML) {\n      event.clipboardData.setData('text/html', tooltip.innerHTML);\n    }\n    if (tooltip && tooltip.textContent) {\n      event.clipboardData.setData('text/plain', tooltip.textContent);\n    }\n    event.preventDefault();\n    return true;\n  }\n  return false;\n}\n\nfunction getResultGrid() {\n  return document.querySelector('[role=\"table\"]');\n}\n\nfunction getChildrenByRole(elem: Element, role: string) {\n  return Array.from(elem.querySelectorAll(`[role=\"${role}\"]`));\n}\n\nfunction copyResultGrid(event: ClipboardEvent) {\n  if (!event.clipboardData) {\n    return false;\n  }\n  const grid = getResultGrid();\n  if (grid) {\n    const label = grid.getAttribute('data-label');\n    const groups = getChildrenByRole(grid, 'rowgroup');\n    const columnHeaders = getChildrenByRole(groups[0], 'columnheader');\n    const rows = getChildrenByRole(groups[1], 'row');\n\n    const thead = `<thead>\\n<tr>${columnHeaders\n      .map((header) => `<th>${header.textContent}</th>`)\n      .join('')}</tr>\\n</thead>`;\n\n    const getCells = (row: Element) => getChildrenByRole(row, 'cell');\n\n    const tr = (cells: Element[]) =>\n      `<tr>${cells.map((cell) => `<td>${cell.textContent}</td>`).join('')}</tr>`;\n\n    const tbody = `<tbody>\\n${rows.map(getCells).map(tr).join('\\n')}\\n</tbody>`;\n\n    // The grid data includes zero-width spaces for formatting while copying.\n    // Using the plain text `&lt;br>` is an explicit hack for Discourse; see\n    // README.md. It won't look nice in, e.g., Word.\n    const table = `<table>\\n${thead}\\n${tbody}\\n</table>`\n      .replace(/\\u200B\\u200B/g, '&lt;br>')\n      .replace(/\\u200B/g, ' ');\n\n    event.clipboardData.setData(\n      'text/html',\n      `<p>${label}</p>\n${table}\n<p>See <a href=\"${document.location.href}\">the airtime calculator</a> for interactive results.</p>`\n    );\n\n    event.clipboardData.setData(\n      'text/plain',\n      `Unfortunately, the table layout is not supported when pasting as plain text.\n\nPlease paste as formatted text, or see ${document.location.href} for formatted results.`\n    );\n\n    event.preventDefault();\n    return true;\n  }\n\n  return false;\n}\n","import axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport GithubCorner from 'react-github-corner';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.scss';\nimport {AppConfig} from './AppConfig';\nimport Calculator from './components/calculator/Calculator';\nimport Toast from './components/notification/Toast';\nimport useClipboard from './hooks/clipboard/useClipboard';\n\n/**\n * Loads the JSON configuration file and renders the application.\n */\nexport default function App() {\n  const configUrl = process.env.PUBLIC_URL + '/config.json';\n  const [progress, setProgress] = useState<string | null>('Loading configuration...');\n  const [config, setConfig] = useState({} as AppConfig);\n\n  useEffect(() => {\n    let didCancel = false;\n    const fetchConfig = async () => {\n      try {\n        // By default, axios expects JSON in UTF8, and converts that on the fly\n        const result = (await axios.get<AppConfig>(configUrl)).data;\n        if (!didCancel) {\n          setProgress(null);\n          setConfig(result);\n        }\n      } catch (error) {\n        // TODO fine for 404, but this does not catch JSON parse errors?\n        setProgress(\n          `Failed to load configuration ${process.env.PUBLIC_URL} ${configUrl}: ${error}`\n        );\n      }\n    };\n\n    // Workaround to suppress the following React warning:\n    //   Warning: useEffect function must return a cleanup function or nothing.\n    //   Promises and useEffect(async () => ...) are not supported, but you can\n    //   call an async function inside an effect.\n    // This still makes the compiler warn about ignoring the returned Promise.\n    fetchConfig();\n    return () => {\n      didCancel = true;\n    };\n  }, [configUrl]);\n\n  const {notification: copyNotification} = useClipboard();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Container fluid className=\"App\">\n        <Toast notification={copyNotification} />\n        <Row>\n          <Col>\n            <h1>Airtime calculator for LoRaWAN</h1>\n            {/*TODO check if IE does not show text null */}\n            <p>{progress}</p>\n          </Col>\n        </Row>\n        {config.networks && <Route render={(props) => <Calculator {...props} config={config} />} />}\n        <GithubCorner href=\"https://github.com/avbentem/airtime-calculator\" />\n      </Container>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as {env: {[key: string]: string}}).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see\n      // https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still\n        // exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}